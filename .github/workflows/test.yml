name: Test

on:
    push:
    pull_request:

env:
    CARGO_TERM_COLOR: always

jobs:
    test-cargo:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Rust Cache
              uses: Swatinem/rust-cache@v2.0.0
            - name: Build
              run: cargo build --verbose
            - name: Run tests
              run: cargo test --verbose
              timeout-minutes: 20

    test-npm:
        strategy:
            matrix:
                node-version: [16.x, 18.x]
                os: [windows-latest, ubuntu-latest, macOs-latest]
        runs-on: ${{matrix.os}}
        steps:
            - uses: actions/checkout@v3
            - name: Setup Node.js ${{matrix.node-version}} environment
              uses: actions/setup-node@v3.4.1
              with:
                  node-version: ${{matrix.node-version}}
            - uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: '17'
            - name: Rust Cache
              uses: Swatinem/rust-cache@v2.0.0
            - name: Install
              run: npm ci
            - name: Run tests
              run: npm test
              timeout-minutes: 20

    test-linux-aarch64-gnu-binding:
        strategy:
            fail-fast: false
            matrix:
                node:
                    - '14'
                    - '16'
                    - '18'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Setup Node.js ${{matrix.node-version}} environment
              uses: actions/setup-node@v3.4.1
              with:
                  node-version: ${{matrix.node-version}}
            - name: Install
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true
                  target: aarch64-unknown-linux-gnu
            - name: Rust Cache
              uses: Swatinem/rust-cache@v2.0.0
            - name: Install cross compile toolchain
              run: |
                  sudo apt-get update
                  sudo apt-get install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu -y
            - name: Set arm64 linker
              run: |
                  mkdir .cargo
                  printf '[target.aarch64-unknown-linux-gnu]\nlinker = "aarch64-linux-gnu-gcc"\n' >> .cargo/config
            - name: Install
              run: npm ci
            - name: Build
              run: npm run build -- -- --target aarch64-unknown-linux-gnu
            - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
            - name: Install dependencies
              run: |
                  npm config set supportedArchitectures.cpu "arm64"
                  npm config set supportedArchitectures.libc "glibc"
                  npm install
            - name: Setup and run tests
              uses: addnab/docker-run-action@v3
              with:
                  image: ghcr.io/napi-rs/napi-rs/nodejs:aarch64-${{ matrix.node }}
                  options: '-v ${{ github.workspace }}:/build -w /build'
                  run: |
                      set -e
                      yarn test
                      ls -la

    benchmark:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Setup Node.js environment
              uses: actions/setup-node@v3.4.1
              with:
                  node-version: 16.x
            - uses: actions/setup-java@v3
              with:
                  distribution: 'temurin' # See 'Supported distributions' for available options
                  java-version: '17'
            - name: Rust Cache
              uses: Swatinem/rust-cache@v2.0.0
            - name: Install
              run: npm ci
            - name: Run benchmarks
              run: npm run benchmark
              timeout-minutes: 20
